'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(string => {
        return string.trim();
    });
    
    main();    
});

function readLine() {
    return inputString[currentLine++];
}
/*
 * Create the function factorial here
 */
function factorial(n) {
  // If the number is less than 0, reject it.
  if (n < 0) 
        return -1;
    
  // If the number is 0, its factorial is 1.
  else if (n == 0) 
      return 1;
    
  // Otherwise, call the recursive procedure again
    else {
        return (n * factorial(n - 1));
        /* 
        If we sum up all the calls in one line, we have
        (4 * (4 - 1) * (3 - 1) * (2 - 1)) = 5 * 4 * 3 * 2 * 1 = 120
        */
    }
}
factorial(4);
function main() {
    const n = +(readLine());
    
    console.log(factorial(n));
}